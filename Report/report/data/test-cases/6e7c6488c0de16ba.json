{
  "uid" : "6e7c6488c0de16ba",
  "name" : "编辑影片详情-编辑视频类型为不存在的内容",
  "fullName" : "meiziku.test_selfvideo#test_modify_originalvideo021",
  "historyId" : "fcd9be035b170c830a7ee5d9d8ea2e25",
  "time" : {
    "start" : 1629106227547,
    "stop" : 1629106227607,
    "duration" : 60
  },
  "description" : "传入参数id,videoFormatKey",
  "descriptionHtml" : "<p>传入参数id,videoFormatKey</p>\n",
  "status" : "skipped",
  "statusMessage" : "XFAIL\n\nAssertionError: assert True != True",
  "statusTrace" : "login_start = '246b7330-4f35-4bfe-8789-831baafa696b'\n\n    @pytest.mark.xfail\n    @allure.feature(\"媒资库后台管理\")\n    @allure.story(\"管理后台自有影片接口\")\n    @allure.title(\"编辑影片详情-编辑视频类型为不存在的内容\")\n    @allure.description(\"传入参数id,videoFormatKey\")\n    def test_modify_originalvideo021(login_start):\n            token =login_start\n            method=data[\"modify_originalvideo\"][20][\"Method\"]\n            apiurl=data[\"modify_originalvideo\"][20][\"ApiUrl\"]\n            params = data[\"modify_originalvideo\"][20][\"Params\"]\n            response=send_requests(method,apiurl,token,data=params)\n            assert response['code'] == '0'\n>           assert response['value'] != True\nE           assert True != True\n\nmeiziku\\test_selfvideo.py:320: AssertionError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "login_start",
    "time" : {
      "start" : 1629106222510,
      "stop" : 1629106222537,
      "duration" : 27
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false
  } ],
  "testStage" : {
    "description" : "传入参数id,videoFormatKey",
    "status" : "skipped",
    "statusMessage" : "XFAIL\n\nAssertionError: assert True != True",
    "statusTrace" : "login_start = '246b7330-4f35-4bfe-8789-831baafa696b'\n\n    @pytest.mark.xfail\n    @allure.feature(\"媒资库后台管理\")\n    @allure.story(\"管理后台自有影片接口\")\n    @allure.title(\"编辑影片详情-编辑视频类型为不存在的内容\")\n    @allure.description(\"传入参数id,videoFormatKey\")\n    def test_modify_originalvideo021(login_start):\n            token =login_start\n            method=data[\"modify_originalvideo\"][20][\"Method\"]\n            apiurl=data[\"modify_originalvideo\"][20][\"ApiUrl\"]\n            params = data[\"modify_originalvideo\"][20][\"Params\"]\n            response=send_requests(method,apiurl,token,data=params)\n            assert response['code'] == '0'\n>           assert response['value'] != True\nE           assert True != True\n\nmeiziku\\test_selfvideo.py:320: AssertionError",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "c90ebf28856b7117",
      "name" : "log",
      "source" : "c90ebf28856b7117.txt",
      "type" : "text/plain",
      "size" : 1491
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : true,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : true
  },
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "feature",
    "value" : "媒资库后台管理"
  }, {
    "name" : "story",
    "value" : "管理后台自有影片接口"
  }, {
    "name" : "tag",
    "value" : "@pytest.mark.xfail"
  }, {
    "name" : "parentSuite",
    "value" : "meiziku"
  }, {
    "name" : "suite",
    "value" : "test_selfvideo"
  }, {
    "name" : "host",
    "value" : "DESKTOP-03G54LT"
  }, {
    "name" : "thread",
    "value" : "21380-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "meiziku.test_selfvideo"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ {
      "uid" : "9e5c3f03300fb53b",
      "status" : "skipped",
      "statusDetails" : "XFAIL\n\nAssertionError: assert True != True",
      "time" : {
        "start" : 1629099899379,
        "stop" : 1629099899441,
        "duration" : 62
      }
    }, {
      "uid" : "502d74f06ef3d3fc",
      "status" : "skipped",
      "statusDetails" : "XFAIL\n\nAssertionError: assert True != True",
      "time" : {
        "start" : 1629099484013,
        "stop" : 1629099484067,
        "duration" : 54
      }
    }, {
      "uid" : "7cfea35944a7eff4",
      "status" : "skipped",
      "statusDetails" : "XFAIL\n\nAssertionError: assert True != True",
      "time" : {
        "start" : 1629098956528,
        "stop" : 1629098956664,
        "duration" : 136
      }
    }, {
      "uid" : "66af83cd6710abd9",
      "status" : "skipped",
      "statusDetails" : "XFAIL\n\nAssertionError: assert True != True",
      "time" : {
        "start" : 1629098683853,
        "stop" : 1629098683933,
        "duration" : 80
      }
    }, {
      "uid" : "cfa46d0dfd502a6c",
      "status" : "skipped",
      "statusDetails" : "XFAIL\n\nAssertionError: assert True != True",
      "time" : {
        "start" : 1629098606798,
        "stop" : 1629098606884,
        "duration" : 86
      }
    }, {
      "uid" : "a21696c300deaa13",
      "status" : "skipped",
      "statusDetails" : "XFAIL\n\nAssertionError: assert True != True",
      "time" : {
        "start" : 1629098297680,
        "stop" : 1629098297726,
        "duration" : 46
      }
    }, {
      "uid" : "79ad19eb9dbf6a2e",
      "status" : "skipped",
      "statusDetails" : "XFAIL\n\nAssertionError: assert True != True",
      "time" : {
        "start" : 1629098231136,
        "stop" : 1629098231193,
        "duration" : 57
      }
    }, {
      "uid" : "fc0792ec6d4ed116",
      "status" : "skipped",
      "statusDetails" : "XFAIL\n\nAssertionError: assert True != True",
      "time" : {
        "start" : 1629096881685,
        "stop" : 1629096881736,
        "duration" : 51
      }
    }, {
      "uid" : "d4f085a82127f7b5",
      "status" : "skipped",
      "statusDetails" : "XFAIL\n\nAssertionError: assert True != True",
      "time" : {
        "start" : 1629095827535,
        "stop" : 1629095827568,
        "duration" : 33
      }
    } ],
    "categories" : [ ],
    "tags" : [ "@pytest.mark.xfail" ]
  },
  "source" : "6e7c6488c0de16ba.json",
  "parameterValues" : [ ]
}