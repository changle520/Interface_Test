{
  "uid" : "fb93bff5a4b8e580",
  "name" : "编辑影片详情-播放格式传参为字符串",
  "fullName" : "meiziku.test_selfvideo#test_modify_originalvideo013",
  "historyId" : "ce0601926657299b859404ca4a08b364",
  "time" : {
    "start" : 1629106227028,
    "stop" : 1629106227081,
    "duration" : 53
  },
  "description" : "传入参数id,playerFormatKey,playerFormatKey为字符串",
  "descriptionHtml" : "<p>传入参数id,playerFormatKey,playerFormatKey为字符串</p>\n",
  "status" : "skipped",
  "statusMessage" : "XFAIL\n\nAssertionError: assert True != True",
  "statusTrace" : "login_start = '246b7330-4f35-4bfe-8789-831baafa696b'\n\n    @pytest.mark.xfail\n    @allure.feature(\"媒资库后台管理\")\n    @allure.story(\"管理后台自有影片接口\")\n    @allure.title(\"编辑影片详情-播放格式传参为字符串\")\n    @allure.description(\"传入参数id,playerFormatKey,playerFormatKey为字符串\")\n    def test_modify_originalvideo013(login_start):\n            token =login_start\n            method=data[\"modify_originalvideo\"][12][\"Method\"]\n            apiurl=data[\"modify_originalvideo\"][12][\"ApiUrl\"]\n            params = data[\"modify_originalvideo\"][12][\"Params\"]\n            response=send_requests(method,apiurl,token,data=params)\n            assert response['code'] == '0'\n>           assert response['value'] != True\nE           assert True != True\n\nmeiziku\\test_selfvideo.py:209: AssertionError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "login_start",
    "time" : {
      "start" : 1629106222510,
      "stop" : 1629106222537,
      "duration" : 27
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false
  } ],
  "testStage" : {
    "description" : "传入参数id,playerFormatKey,playerFormatKey为字符串",
    "status" : "skipped",
    "statusMessage" : "XFAIL\n\nAssertionError: assert True != True",
    "statusTrace" : "login_start = '246b7330-4f35-4bfe-8789-831baafa696b'\n\n    @pytest.mark.xfail\n    @allure.feature(\"媒资库后台管理\")\n    @allure.story(\"管理后台自有影片接口\")\n    @allure.title(\"编辑影片详情-播放格式传参为字符串\")\n    @allure.description(\"传入参数id,playerFormatKey,playerFormatKey为字符串\")\n    def test_modify_originalvideo013(login_start):\n            token =login_start\n            method=data[\"modify_originalvideo\"][12][\"Method\"]\n            apiurl=data[\"modify_originalvideo\"][12][\"ApiUrl\"]\n            params = data[\"modify_originalvideo\"][12][\"Params\"]\n            response=send_requests(method,apiurl,token,data=params)\n            assert response['code'] == '0'\n>           assert response['value'] != True\nE           assert True != True\n\nmeiziku\\test_selfvideo.py:209: AssertionError",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "a7b3572ea804305c",
      "name" : "log",
      "source" : "a7b3572ea804305c.txt",
      "type" : "text/plain",
      "size" : 1492
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : true,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : true
  },
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "feature",
    "value" : "媒资库后台管理"
  }, {
    "name" : "story",
    "value" : "管理后台自有影片接口"
  }, {
    "name" : "tag",
    "value" : "@pytest.mark.xfail"
  }, {
    "name" : "parentSuite",
    "value" : "meiziku"
  }, {
    "name" : "suite",
    "value" : "test_selfvideo"
  }, {
    "name" : "host",
    "value" : "DESKTOP-03G54LT"
  }, {
    "name" : "thread",
    "value" : "21380-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "meiziku.test_selfvideo"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ {
      "uid" : "6300065ba8f3413b",
      "status" : "skipped",
      "statusDetails" : "XFAIL\n\nAssertionError: assert True != True",
      "time" : {
        "start" : 1629099898939,
        "stop" : 1629099898971,
        "duration" : 32
      }
    }, {
      "uid" : "a11db3259e5969fd",
      "status" : "skipped",
      "statusDetails" : "XFAIL\n\nAssertionError: assert True != True",
      "time" : {
        "start" : 1629099483404,
        "stop" : 1629099483464,
        "duration" : 60
      }
    }, {
      "uid" : "831ee11103b70ea0",
      "status" : "skipped",
      "statusDetails" : "XFAIL\n\nAssertionError: assert True != True",
      "time" : {
        "start" : 1629098955760,
        "stop" : 1629098955826,
        "duration" : 66
      }
    }, {
      "uid" : "8e62a44bf5a692c6",
      "status" : "skipped",
      "statusDetails" : "XFAIL\n\nAssertionError: assert True != True",
      "time" : {
        "start" : 1629098683225,
        "stop" : 1629098683265,
        "duration" : 40
      }
    }, {
      "uid" : "cd184a6b0fbdbe16",
      "status" : "skipped",
      "statusDetails" : "XFAIL\n\nAssertionError: assert True != True",
      "time" : {
        "start" : 1629098606322,
        "stop" : 1629098606366,
        "duration" : 44
      }
    }, {
      "uid" : "3b940934679512f9",
      "status" : "skipped",
      "statusDetails" : "XFAIL\n\nAssertionError: assert True != True",
      "time" : {
        "start" : 1629098297255,
        "stop" : 1629098297307,
        "duration" : 52
      }
    }, {
      "uid" : "6554261a025a3bcf",
      "status" : "skipped",
      "statusDetails" : "XFAIL\n\nAssertionError: assert True != True",
      "time" : {
        "start" : 1629098230363,
        "stop" : 1629098230431,
        "duration" : 68
      }
    }, {
      "uid" : "9da0ce3636415577",
      "status" : "skipped",
      "statusDetails" : "XFAIL\n\nAssertionError: assert True != True",
      "time" : {
        "start" : 1629096881240,
        "stop" : 1629096881271,
        "duration" : 31
      }
    }, {
      "uid" : "1916c8e3d7ff35ae",
      "status" : "skipped",
      "statusDetails" : "XFAIL\n\nAssertionError: assert True != True",
      "time" : {
        "start" : 1629095827111,
        "stop" : 1629095827161,
        "duration" : 50
      }
    } ],
    "categories" : [ ],
    "tags" : [ "@pytest.mark.xfail" ]
  },
  "source" : "fb93bff5a4b8e580.json",
  "parameterValues" : [ ]
}